generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(cuid())
  email     String     @unique
  name      String
  password  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  favorites Favorite[]
  playlists Playlist[]

  @@map("users")
}

model Playlist {
  id          String          @id @default(cuid())
  name        String
  description String?
  isPublic    Boolean         @default(false)
  coverUrl    String?
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  userId      String
  tracks      PlaylistTrack[]
  user        User            @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("playlists")
}

model PlaylistTrack {
  id         String   @id @default(cuid())
  position   Int
  addedAt    DateTime @default(now())
  spotifyId  String
  name       String
  artist     String
  album      String
  duration   Int
  imageUrl   String?
  preview    String?
  playlistId String
  playlist   Playlist @relation(fields: [playlistId], references: [id], onDelete: Cascade)

  @@unique([playlistId, spotifyId])
  @@map("playlist_tracks")
}

model Favorite {
  id         String   @id @default(cuid())
  addedAt    DateTime @default(now())
  spotifyId  String
  name       String
  artist     String
  album      String
  duration   Int
  imageUrl   String?
  previewUrl String?
  userId     String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, spotifyId])
  @@map("favorites")
}
